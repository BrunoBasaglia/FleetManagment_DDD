// <auto-generated />
using GestaoDeFrota.Infra.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GestaoDeFrota.Infra.Migrations
{
    [DbContext(typeof(GestaoDeFrotasContexto))]
    [Migration("20191017173918_Update_table")]
    partial class Update_table
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GestaoDeFrota.Domain.Entities.Cambio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.ToTable("Cambios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Tipo = "Manual"
                        },
                        new
                        {
                            Id = 2,
                            Tipo = "Automático"
                        },
                        new
                        {
                            Id = 3,
                            Tipo = "Automatizado"
                        },
                        new
                        {
                            Id = 4,
                            Tipo = "Dualogic"
                        },
                        new
                        {
                            Id = 5,
                            Tipo = "CVT"
                        });
                });

            modelBuilder.Entity("GestaoDeFrota.Domain.Entities.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Tipo = "Carro"
                        },
                        new
                        {
                            Id = 2,
                            Tipo = "Moto"
                        },
                        new
                        {
                            Id = 3,
                            Tipo = "Ônibus"
                        },
                        new
                        {
                            Id = 4,
                            Tipo = "Carreta"
                        },
                        new
                        {
                            Id = 5,
                            Tipo = "Lancha"
                        },
                        new
                        {
                            Id = 6,
                            Tipo = "Jet Sky"
                        },
                        new
                        {
                            Id = 7,
                            Tipo = "Caminhoneta"
                        },
                        new
                        {
                            Id = 8,
                            Tipo = "Micro-ônibus"
                        });
                });

            modelBuilder.Entity("GestaoDeFrota.Domain.Entities.Classe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Classificacao")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.ToTable("Classes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Classificacao = "Utilitário"
                        },
                        new
                        {
                            Id = 2,
                            Classificacao = "Passeio"
                        },
                        new
                        {
                            Id = 3,
                            Classificacao = "Esportivo"
                        },
                        new
                        {
                            Id = 4,
                            Classificacao = "SUV"
                        },
                        new
                        {
                            Id = 5,
                            Classificacao = "Sedan"
                        },
                        new
                        {
                            Id = 6,
                            Classificacao = "Off Road"
                        },
                        new
                        {
                            Id = 7,
                            Classificacao = "Hatch"
                        },
                        new
                        {
                            Id = 8,
                            Classificacao = "Pesado"
                        },
                        new
                        {
                            Id = 9,
                            Classificacao = "Leve"
                        },
                        new
                        {
                            Id = 10,
                            Classificacao = "Médio"
                        });
                });

            modelBuilder.Entity("GestaoDeFrota.Domain.Entities.Combustivel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Combustiveis");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Álcool"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Álcool Aditivado"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Gasolina Comum"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Gasolina Aditivada"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Gasolina Pódium"
                        },
                        new
                        {
                            Id = 6,
                            Nome = "GNV"
                        },
                        new
                        {
                            Id = 7,
                            Nome = "Flex"
                        },
                        new
                        {
                            Id = 8,
                            Nome = "Diesel"
                        });
                });

            modelBuilder.Entity("GestaoDeFrota.Domain.Entities.Fabricante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.ToTable("Fabricantes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Fiat"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Chevrolet"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Volkswagem"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Honda"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Toyota"
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Ford"
                        });
                });

            modelBuilder.Entity("GestaoDeFrota.Domain.Entities.Imagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Arquivo")
                        .HasMaxLength(50);

                    b.Property<string>("Diretorio")
                        .HasMaxLength(150);

                    b.Property<string>("Extensao")
                        .HasMaxLength(10);

                    b.Property<int>("VeiculoId");

                    b.HasKey("Id");

                    b.HasIndex("VeiculoId")
                        .IsUnique();

                    b.ToTable("Imagens");
                });

            modelBuilder.Entity("GestaoDeFrota.Domain.Entities.Modelo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FabricanteId");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("FabricanteId");

                    b.ToTable("Modelos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FabricanteId = 1,
                            Nome = "Palio"
                        },
                        new
                        {
                            Id = 2,
                            FabricanteId = 1,
                            Nome = "Argo"
                        },
                        new
                        {
                            Id = 3,
                            FabricanteId = 1,
                            Nome = "Cronos"
                        },
                        new
                        {
                            Id = 4,
                            FabricanteId = 2,
                            Nome = "Cruze"
                        },
                        new
                        {
                            Id = 5,
                            FabricanteId = 2,
                            Nome = "Captiva"
                        },
                        new
                        {
                            Id = 6,
                            FabricanteId = 2,
                            Nome = "Onix"
                        },
                        new
                        {
                            Id = 7,
                            FabricanteId = 3,
                            Nome = "Gol"
                        },
                        new
                        {
                            Id = 8,
                            FabricanteId = 3,
                            Nome = "Polo"
                        },
                        new
                        {
                            Id = 9,
                            FabricanteId = 3,
                            Nome = "Virtus"
                        },
                        new
                        {
                            Id = 10,
                            FabricanteId = 4,
                            Nome = "Fit"
                        },
                        new
                        {
                            Id = 11,
                            FabricanteId = 4,
                            Nome = "Civic"
                        },
                        new
                        {
                            Id = 12,
                            FabricanteId = 5,
                            Nome = "Etios"
                        },
                        new
                        {
                            Id = 13,
                            FabricanteId = 5,
                            Nome = "Corola"
                        },
                        new
                        {
                            Id = 14,
                            FabricanteId = 6,
                            Nome = "Focus"
                        },
                        new
                        {
                            Id = 15,
                            FabricanteId = 6,
                            Nome = "Fiesta"
                        },
                        new
                        {
                            Id = 16,
                            FabricanteId = 6,
                            Nome = "Ka"
                        },
                        new
                        {
                            Id = 17,
                            FabricanteId = 6,
                            Nome = "Edge"
                        },
                        new
                        {
                            Id = 18,
                            FabricanteId = 6,
                            Nome = "Fusion"
                        },
                        new
                        {
                            Id = 19,
                            FabricanteId = 6,
                            Nome = "Ranger"
                        });
                });

            modelBuilder.Entity("GestaoDeFrota.Domain.Entities.Motor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Motorizacao")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Motores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Motorizacao = "125 Cilindradas"
                        },
                        new
                        {
                            Id = 2,
                            Motorizacao = "250 Cilindradas"
                        },
                        new
                        {
                            Id = 3,
                            Motorizacao = "300 Cilindardas"
                        },
                        new
                        {
                            Id = 4,
                            Motorizacao = "500 Cilindardas"
                        },
                        new
                        {
                            Id = 5,
                            Motorizacao = "600 Cilindardas"
                        },
                        new
                        {
                            Id = 6,
                            Motorizacao = "750 Cilindardas"
                        },
                        new
                        {
                            Id = 7,
                            Motorizacao = "900 Cilindardas"
                        },
                        new
                        {
                            Id = 8,
                            Motorizacao = "1000 Cilindardas"
                        },
                        new
                        {
                            Id = 9,
                            Motorizacao = "1300 Cilindardas"
                        },
                        new
                        {
                            Id = 10,
                            Motorizacao = "1400 Cilindardas"
                        },
                        new
                        {
                            Id = 11,
                            Motorizacao = "1500 Cilindardas"
                        },
                        new
                        {
                            Id = 12,
                            Motorizacao = "1600 Cilindardas"
                        },
                        new
                        {
                            Id = 13,
                            Motorizacao = "1700 Cilindardas"
                        },
                        new
                        {
                            Id = 14,
                            Motorizacao = "2000 Cilindardas"
                        },
                        new
                        {
                            Id = 15,
                            Motorizacao = "2200 Cilindardas"
                        },
                        new
                        {
                            Id = 16,
                            Motorizacao = "2400 Cilindardas"
                        },
                        new
                        {
                            Id = 17,
                            Motorizacao = "2800 Cilindardas"
                        },
                        new
                        {
                            Id = 18,
                            Motorizacao = "3100 Cilindardas"
                        },
                        new
                        {
                            Id = 19,
                            Motorizacao = "4100 Cilindardas"
                        });
                });

            modelBuilder.Entity("GestaoDeFrota.Domain.Entities.Origem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Procedencia")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Origens");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Procedencia = "Importado"
                        },
                        new
                        {
                            Id = 2,
                            Procedencia = "Nacional"
                        });
                });

            modelBuilder.Entity("GestaoDeFrota.Domain.Entities.Quilometragem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Anterior")
                        .HasMaxLength(6);

                    b.Property<float>("Atual")
                        .HasMaxLength(6);

                    b.HasKey("Id");

                    b.ToTable("Quilometragem");
                });

            modelBuilder.Entity("GestaoDeFrota.Domain.Entities.Veiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CambioId");

                    b.Property<int>("CategoriaId");

                    b.Property<string>("Chassi")
                        .IsRequired()
                        .HasMaxLength(17);

                    b.Property<int>("ClasseId");

                    b.Property<int>("CombustivelId");

                    b.Property<int>("Lugares");

                    b.Property<int>("ModeloId");

                    b.Property<int>("MotorId");

                    b.Property<string>("Observacao");

                    b.Property<int>("OrigemId");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.Property<int>("Portas");

                    b.Property<string>("Potencia")
                        .IsRequired();

                    b.Property<double>("Quilometragem");

                    b.Property<int>("Tanque");

                    b.Property<decimal>("Valor")
                        .HasMaxLength(8);

                    b.HasKey("Id");

                    b.HasIndex("CambioId");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("ClasseId");

                    b.HasIndex("CombustivelId");

                    b.HasIndex("ModeloId");

                    b.HasIndex("MotorId");

                    b.HasIndex("OrigemId");

                    b.ToTable("Veiculos");
                });

            modelBuilder.Entity("GestaoDeFrota.Domain.Entities.Imagem", b =>
                {
                    b.HasOne("GestaoDeFrota.Domain.Entities.Veiculo", "Veiculo")
                        .WithOne("Imagem")
                        .HasForeignKey("GestaoDeFrota.Domain.Entities.Imagem", "VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GestaoDeFrota.Domain.Entities.Modelo", b =>
                {
                    b.HasOne("GestaoDeFrota.Domain.Entities.Fabricante", "Fabricante")
                        .WithMany("Modelos")
                        .HasForeignKey("FabricanteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GestaoDeFrota.Domain.Entities.Veiculo", b =>
                {
                    b.HasOne("GestaoDeFrota.Domain.Entities.Cambio", "Cambio")
                        .WithMany("Veiculos")
                        .HasForeignKey("CambioId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GestaoDeFrota.Domain.Entities.Categoria", "Categoria")
                        .WithMany("Veiculos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GestaoDeFrota.Domain.Entities.Classe", "Classe")
                        .WithMany("Veiculos")
                        .HasForeignKey("ClasseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GestaoDeFrota.Domain.Entities.Combustivel", "Combustivel")
                        .WithMany("Veiculos")
                        .HasForeignKey("CombustivelId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GestaoDeFrota.Domain.Entities.Modelo", "Modelo")
                        .WithMany("Veiculos")
                        .HasForeignKey("ModeloId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GestaoDeFrota.Domain.Entities.Motor", "Motor")
                        .WithMany("Veiculos")
                        .HasForeignKey("MotorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GestaoDeFrota.Domain.Entities.Origem", "Origem")
                        .WithMany("Veiculos")
                        .HasForeignKey("OrigemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
